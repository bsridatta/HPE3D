INFO:root:using device: cpu
INFO:root:processing subjects: [1, 5, 6, 7, 8]
INFO:root:Training data loader called. len - 8
INFO:root:processing subjects: [1, 5, 6, 7, 8, 9, 11]
INFO:root:Validation data loader called. len - 8
INFO:root:Start training procedure
2d_2_3d Epoch: 1 [0/5 (0%)]	Loss: 1.1738	ReCon: 1.1737	KLD: 0.0788
Traceback (most recent call last):
  File "/home/datta/lab/HPE3D/src/train.py", line 186, in <module>
    main()
  File "/home/datta/lab/HPE3D/src/train.py", line 108, in main
    optimizer, epoch, vae_type)
  File "/home/datta/lab/HPE3D/src/trainer.py", line 24, in training_epoch
    output = _training_step(batch, batch_idx, model, config)
  File "/home/datta/lab/HPE3D/src/trainer.py", line 81, in _training_step
    mean, logvar = encoder(inp)
  File "/home/datta/miniconda3/envs/ml/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/datta/lab/HPE3D/src/models/pose_models.py", line 40, in forward
    x = self.dense_block(x)
  File "/home/datta/miniconda3/envs/ml/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/datta/miniconda3/envs/ml/lib/python3.7/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/home/datta/miniconda3/envs/ml/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/datta/miniconda3/envs/ml/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 81, in forward
    exponential_average_factor, self.eps)
  File "/home/datta/miniconda3/envs/ml/lib/python3.7/site-packages/torch/nn/functional.py", line 1666, in batch_norm
    raise ValueError('Expected more than 1 value per channel when training, got input size {}'.format(size))
ValueError: Expected more than 1 value per channel when training, got input size torch.Size([1, 512])
